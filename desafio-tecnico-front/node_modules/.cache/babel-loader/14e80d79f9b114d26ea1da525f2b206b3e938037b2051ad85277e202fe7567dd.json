{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\C\\xF3digos\\\\React\\\\desafio-tecnico\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PieChart from './chart/piechart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [labels, setLabels] = useState(null);\n  const [values, setValues] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/estados/Nível V'); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        setLabels(Object.keys(result));\n        setValues(Object.values(result));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = {\n    labels: labels,\n    values: values,\n    colors: ['#FF6384', '#36A2EB', '#FFCE56']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pie Chart Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LERD7eSm3QGBwlIJyKvTguS9A0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","jsxDEV","_jsxDEV","App","_s","labels","setLabels","values","setValues","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","result","json","Object","keys","children","fileName","_jsxFileName","lineNumber","columnNumber","message","chartData","colors","data","_c","$RefreshReg$"],"sources":["C:/Users/marce/OneDrive/Área de Trabalho/Códigos/React/desafio-tecnico/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PieChart from './chart/piechart';\n\nconst App = () => {\n\n  const [labels, setLabels] = useState(null);\n  const [values, setValues] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/estados/Nível V'); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        setLabels(Object.keys(result));\n        setValues(Object.values(result))\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); \n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  const chartData = {\n    labels: labels,\n    values: values,\n    colors: ['#FF6384', '#36A2EB', '#FFCE56'],\n  };\n\n  return (\n    <div>\n      <h1>Pie Chart Example</h1>\n      <PieChart data={chartData} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC,CAAC,CAAC;QACvE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCb,SAAS,CAACc,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAAC;QAC9BV,SAAS,CAACY,MAAM,CAACb,MAAM,CAACW,MAAM,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAIf,KAAK,EAAE;IACT,oBAAOT,OAAA;MAAAoB,QAAA,GAAG,SAAO,EAACX,KAAK,CAACgB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtC;EAEA,MAAME,SAAS,GAAG;IAChBvB,MAAM,EAAEA,MAAM;IACdE,MAAM,EAAEA,MAAM;IACdsB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;EAC1C,CAAC;EAED,oBACE3B,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA,CAACF,QAAQ;MAAC8B,IAAI,EAAEF;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}